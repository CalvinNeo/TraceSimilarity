<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="html-wide" table-class="display nowrap" order="4" framework="foundation">

<css lib="datatables responsive"/>
<js lib="jquery foundation datatables responsive">
<![CDATA[

$(document).ready(function() {
	$('#example').DataTable( {
		responsive: {
			details: {
				display: $.fn.dataTable.Responsive.display.modal( {
					header: function ( row ) {
						var data = row.data();
						return 'Details for '+data[0]+' '+data[1];
					}
				} ),
				renderer: function ( api, rowIdx, columns ) {
					var data = $.map( columns, function ( col, i ) {
						return '<tr>'+
								'<td>'+col.title+':'+'</td> '+
								'<td>'+col.data+'</td>'+
							'</tr>';
					} ).join('');

					return $('<table width="100%"/>').append( data );
				}
			}
		}
	} );
} );

]]>
</js>

<title lib="Responsive">Foundation modal</title>

<info><![CDATA[

This example shows the `r-init responsive.details.display` option being used with the `modal` option, which, when used with the Foundation integration for Responsive, will use Foundation's native modal display.

The built-in `modal` display option should be executed as a function with optional parameters passed in to control the behaviour of the modal display. In the case of Foundation it has only a `header` option which is a function that should return the title for the modal. If you do not wish to display a title, simply don't use this option.

Additionally, the `r-init responsive.details.renderer` option is used here to display the full data for the row, rather than just the hidden columns, which is the default behaviour.

]]></info>

</dt-example>

